{% extends 'layouts/sidebar.html.twig' %}

{% block sidebar_content %}
    <article class="markdown-body entry-content" itemprop="text">
        <h1><a id="user-content-feathers-nedb" class="anchor" aria-hidden="true" href="#feathers-nedb">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>feathers-nedb
        </h1>
        <p><a href="https://github.com/feathersjs-ecosystem/feathers-nedb/">feathers-nedb</a> is a database service
            adapter for <a href="https://github.com/louischatriot/nedb">NeDB</a>, an embedded datastore with a <a
                    href="https://www.mongodb.org/" rel="nofollow">MongoDB</a> like API. NeDB can store data in-memory
            or on the filesystem which makes it useful as a persistent storage without a separate database server.</p>
        <div class="highlight highlight-source-shell">
            <pre><code class="hljs">$ npm install --save nedb feathers-nedb</code></pre>
        </div>
        <blockquote>
            <p><strong>Important:</strong> <code>feathers-nedb</code> implements the <a
                        href="https://docs.feathersjs.com/api/databases/common.html" rel="nofollow">Feathers Common
                    database adapter API</a> and <a href="https://docs.feathersjs.com/api/databases/querying.html"
                                                    rel="nofollow">querying syntax</a>.</p>
        </blockquote>
        <h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>API
        </h2>
        <h3><a id="user-content-serviceoptions" class="anchor" aria-hidden="true" href="#serviceoptions">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>service(options)</code></h3>
        <p>Returns a new service instance initialized with the given options. <code>Model</code> has to be an NeDB
            database instance.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-k">const</span> <span class="pl-c1">NeDB</span> <span
                        class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span
                            class="pl-pds">'</span>nedb<span class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">service</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>feathers-nedb<span class="pl-pds">'</span></span>);

<span class="pl-c"><span class="pl-c">//</span> Create a NeDB instance</span>
<span class="pl-k">const</span> <span class="pl-c1">Model</span> <span class="pl-k">=</span> <span
                        class="pl-k">new</span> <span class="pl-en">NeDB</span>({
  filename<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>./data/messages.db<span
                            class="pl-pds">'</span></span>,
  autoload<span class="pl-k">:</span> <span class="pl-c1">true</span>
});

<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-s"><span class="pl-pds">'</span>/messages<span
                            class="pl-pds">'</span></span>, <span class="pl-en">service</span>({ Model }));
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-s"><span class="pl-pds">'</span>/messages<span
                                class="pl-pds">'</span></span>, <span class="pl-en">service</span>({ Model, id, events, paginate }));</code></pre>
        </div>
        <p><strong>Options:</strong></p>
        <ul>
            <li><code>Model</code> (<strong>required</strong>) - The NeDB database instance. See the <a
                        href="https://github.com/louischatriot/nedb#api">NeDB API</a> for more information.
            </li>
            <li><code>id</code> (<em>optional</em>, default: <code>'_id'</code>) - The name of the id field property. By
                design, NeDB will always add an <code>_id</code> property.
            </li>
            <li><code>events</code> (<em>optional</em>) - A list of <a
                        href="https://docs.feathersjs.com/api/events.html#custom-events" rel="nofollow">custom service
                    events</a> sent by this service
            </li>
            <li><code>paginate</code> (<em>optional</em>) - A <a
                        href="https://docs.feathersjs.com/api/databases/common.html#pagination" rel="nofollow">pagination
                    object</a> containing a <code>default</code> and <code>max</code> page size
            </li>
        </ul>
        <h3><a id="user-content-paramsnedb" class="anchor" aria-hidden="true" href="#paramsnedb">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>params.nedb
        </h3>
        <p>When making a <a href="https://docs.feathersjs.com/api/services.html" rel="nofollow">service method</a> call,
            <code>params</code> can contain an <code>nedb</code> property which allows to pass additional <a
                    href="https://github.com/louischatriot/nedb#updating-documents">NeDB options</a>, for example to
            allow <code>upsert</code>:</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-smi">app</span>.<span
                        class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">update</span>(<span class="pl-s"><span
                            class="pl-pds">'</span>someid<span class="pl-pds">'</span></span>, {
  text<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>This message will be either created or updated<span
                            class="pl-pds">'</span></span>
}, {
  nedb<span class="pl-k">:</span> { upsert<span class="pl-k">:</span> <span class="pl-c1">true</span> }
                    });</code></pre>
        </div>
        <h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>Example
        </h2>
        <p>Here is an example of a Feathers server with a <code>messages</code> NeDB service that supports pagination
            and persists to <code>db-data/messages</code>:</p>
        <pre><code>$ npm install @feathersjs/feathers @feathersjs/errors @feathersjs/express @feathersjs/socketio feathers-nedb nedb
</code></pre>
        <p>In <code>app.js</code>:</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-k">const</span> <span
                        class="pl-c1">feathers</span> <span class="pl-k">=</span> <span
                        class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>@feathersjs/feathers<span
                            class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">express</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>@feathersjs/express<span
                            class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">socketio</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>@feathersjs/socketio<span
                            class="pl-pds">'</span></span>);

<span class="pl-k">const</span> <span class="pl-c1">NeDB</span> <span class="pl-k">=</span> <span
                        class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>nedb<span
                            class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">service</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>feathers-nedb<span class="pl-pds">'</span></span>);

<span class="pl-k">const</span> <span class="pl-c1">db</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span
                        class="pl-en">NeDB</span>({
  filename<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>./db-data/messages<span
                            class="pl-pds">'</span></span>,
  autoload<span class="pl-k">:</span> <span class="pl-c1">true</span>
});

<span class="pl-c"><span class="pl-c">//</span> Create an Express compatible Feathers application instance.</span>
<span class="pl-k">const</span> <span class="pl-c1">app</span> <span class="pl-k">=</span> <span
                        class="pl-en">express</span>(<span class="pl-en">feathers</span>());
<span class="pl-c"><span class="pl-c">//</span> Turn on JSON parser for REST services</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">json</span>());
<span class="pl-c"><span class="pl-c">//</span> Turn on URL-encoded parser for REST services</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">urlencoded</span>({extended<span
                        class="pl-k">:</span> <span class="pl-c1">true</span>}));
<span class="pl-c"><span class="pl-c">//</span> Enable REST services</span>
<span class="pl-smi">app</span>.<span class="pl-en">configure</span>(<span class="pl-smi">express</span>.<span
                        class="pl-en">rest</span>());
<span class="pl-c"><span class="pl-c">//</span> Enable Socket.io services</span>
<span class="pl-smi">app</span>.<span class="pl-en">configure</span>(<span class="pl-en">socketio</span>());
<span class="pl-c"><span class="pl-c">//</span> Connect to the db, create and register a Feathers service.</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-s"><span class="pl-pds">'</span>/messages<span
                            class="pl-pds">'</span></span>, <span class="pl-en">service</span>({
  Model<span class="pl-k">:</span> db,
  paginate<span class="pl-k">:</span> {
    default<span class="pl-k">:</span> <span class="pl-c1">2</span>,
    max<span class="pl-k">:</span> <span class="pl-c1">4</span>
  }
}));
<span class="pl-c"><span class="pl-c">//</span> Set up default error handler</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">errorHandler</span>());

<span class="pl-c"><span class="pl-c">//</span> Create a dummy Message</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">create</span>({
  text<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>Message created on server<span
                            class="pl-pds">'</span></span>
}).<span class="pl-en">then</span>(<span class="pl-smi">message</span> <span class="pl-k">=&gt;</span> <span
                        class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span
                            class="pl-pds">'</span>Created message<span class="pl-pds">'</span></span>, message));

<span class="pl-c"><span class="pl-c">//</span> Start the server.</span>
<span class="pl-k">const</span> <span class="pl-c1">port</span> <span class="pl-k">=</span> <span
                        class="pl-c1">3030</span>;

<span class="pl-smi">app</span>.<span class="pl-en">listen</span>(port, () <span class="pl-k">=&gt;</span> {
  <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">`</span>Feathers server listening on port <span
                            class="pl-s1"><span class="pl-pse">${</span>port<span class="pl-pse">}</span></span><span
                            class="pl-pds">`</span></span>);
                    });</code></pre>
        </div>
        <p>Run the example with <code>node app</code> and go to <a href="http://localhost:3030/messages" rel="nofollow">localhost:3030/messages</a>.
        </p>
        <h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>License
        </h2>
        <p>Copyright (c) 2016</p>
        <p>Licensed under the <a href="/feathersjs-ecosystem/feathers-nedb/blob/master/LICENSE">MIT license</a>.</p>
    </article>
{% endblock %}
