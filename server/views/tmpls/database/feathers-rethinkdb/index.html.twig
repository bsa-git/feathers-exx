{% extends 'layouts/sidebar.html.twig' %}

{% block sidebar_content %}
    <article class="markdown-body entry-content" itemprop="text">
        <h1><a id="user-content-feathers-rethinkdb" class="anchor" aria-hidden="true" href="#feathers-rethinkdb">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>feathers-rethinkdb
        </h1>
        <p><a href="https://github.com/feathersjs-ecosystem/feathers-rethinkdb">feathers-rethinkdb</a> is a database
            adapter for <a href="https://rethinkdb.com" rel="nofollow">RethinkDB</a>, a real-time database.</p>
        <div class="highlight highlight-source-shell">
            <pre><code class="hljs">$ npm install --save rethinkdbdash feathers-rethinkdb</code></pre>
        </div>
        <blockquote>
            <p><strong>Important:</strong> <code>feathers-rethinkdb</code> implements the <a
                        href="https://docs.feathersjs.com/api/databases/common.html" rel="nofollow">Feathers Common
                    database adapter API</a> and <a href="https://docs.feathersjs.com/api/databases/querying.html"
                                                    rel="nofollow">querying syntax</a>.</p>
        </blockquote>
        <blockquote>
            <p>This adapter requires a running <a href="https://www.rethinkdb.com/" rel="nofollow">RethinkDB</a> server.
            </p>
        </blockquote>
        <h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>API
        </h2>
        <h3><a id="user-content-serviceoptions" class="anchor" aria-hidden="true" href="#serviceoptions">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>service(options)</code></h3>
        <p>Returns a new service instance initialized with the given options. For more information on initializing the
            driver see the <a href="https://github.com/neumino/rethinkdbdash">RethinkDBdash documentation</a>.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-k">const</span> <span
                        class="pl-c1">r</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>rethinkdbdash<span class="pl-pds">'</span></span>)({
  db<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>feathers<span
                            class="pl-pds">'</span></span>
});
<span class="pl-k">const</span> <span class="pl-c1">service</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>feathers-rethinkdb<span class="pl-pds">'</span></span>);

<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-s"><span class="pl-pds">'</span>/messages<span
                            class="pl-pds">'</span></span>, <span class="pl-en">service</span>({
  Model<span class="pl-k">:</span> r,
  db<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>someotherdb<span class="pl-pds">'</span></span>, <span
                        class="pl-c"><span class="pl-c">//</span>must be on the same connection as rethinkdbdash</span>
  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>messages<span class="pl-pds">'</span></span>,
  <span class="pl-c"><span class="pl-c">//</span> Enable pagination</span>
  paginate<span class="pl-k">:</span> {
    default<span class="pl-k">:</span> <span class="pl-c1">2</span>,
    max<span class="pl-k">:</span> <span class="pl-c1">4</span>
  }
}));
                </code></pre>
        </div>
        <blockquote>
            <p><strong>Note:</strong> By default, <code>watch</code> is set to <code>true</code> which means this
                adapter monitors the database for changes and automatically sends real-time events. This means that,
                unlike other databases and services, you will also get events if the database is changed directly.</p>
        </blockquote>
        <p><strong>Options:</strong></p>
        <ul>
            <li><code>Model</code> (<strong>required</strong>) - The <code>rethinkdbdash</code> instance, already
                initialized with a configuration object. <a
                        href="https://github.com/neumino/rethinkdbdash#importing-the-driver">see options here</a></li>
            <li><code>name</code> (<strong>required</strong>) - The name of the table</li>
            <li><code>watch</code> (<em>options</em>, default: <code>true</code>) - Listen to table changefeeds and send
                according <a href="https://docs.feathersjs.com/api/events.html" rel="nofollow">real-time events</a> on
                the adapter.
            </li>
            <li><code>db</code> (<em>optional</em>, default: <code>none</code>) - Specify and alternate rethink database
                for the service to use. Must be on the same server/connection used by rethinkdbdash. It will be auto
                created if you call init() on the service and it does not yet exist.
            </li>
            <li><code>id</code> (<em>optional</em>, default: <code>'id'</code>) - The name of the id field property.
                Needs to be set as the primary key when creating the table.
            </li>
            <li><code>events</code> (<em>optional</em>) - A list of <a
                        href="https://docs.feathersjs.com/api/events.html#custom-events" rel="nofollow">custom service
                    events</a> sent by this service
            </li>
            <li><code>paginate</code> (<em>optional</em>) - A <a
                        href="https://docs.feathersjs.com/api/databases/common.html#pagination" rel="nofollow">pagination
                    object</a> containing a <code>default</code> and <code>max</code> page size
            </li>
        </ul>
        <h3><a id="user-content-adapterinitoptions" class="anchor" aria-hidden="true" href="#adapterinitoptions">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>adapter.init([options])</code></h3>
        <p>Create the database and table if it does not exists. <code>options</code> can be the RethinkDB <a
                    href="https://rethinkdb.com/api/javascript/table_create/" rel="nofollow">tableCreate options</a>.
        </p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-c"><span class="pl-c">//</span> Initialize the `messages` table with `messageId` as the primary key</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">init</span>({
  primaryKey<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>messageId<span
                            class="pl-pds">'</span></span>
}).<span class="pl-en">then</span>(() <span class="pl-k">=&gt;</span> {
  <span class="pl-c"><span class="pl-c">//</span> Use service here</span>
});
                </code></pre>
        </div>
        <h3><a id="user-content-adaptercreatequeryquery" class="anchor" aria-hidden="true"
               href="#adaptercreatequeryquery">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>adapter.createQuery(query)</code></h3>
        <p>Returns a RethinkDB query with the <a href="https://docs.feathersjs.com/api/databases/querying.html"
                                                 rel="nofollow">common filter criteria</a> (without pagination) applied.
        </p>
        <h3><a id="user-content-paramsrethinkdb" class="anchor" aria-hidden="true" href="#paramsrethinkdb">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>params.rethinkdb
        </h3>
        <p>When making a <a href="https://docs.feathersjs.com/api/services.html" rel="nofollow">service method</a> call,
            <code>params</code> can contain an <code>rethinkdb</code> property which allows to pass additional RethinkDB
            options. See <a href="#customizing-the-query">customizing the query</a> for an example.</p>
        <h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>Example
        </h2>
        <p>To run the complete RethinkDB example we need to install</p>
        <pre><code>$ npm install @feathersjs/feathers @feathersjs/errors @feathersjs/express @feathersjs/socketio feathers-rethinkdb rethinkdbdash
</code></pre>
        <p>We also need access to a RethinkDB server. You can install a local server on your local development machine
            by downloading one of the packages <a href="https://rethinkdb.com/docs/install/" rel="nofollow">from the
                RethinkDB website</a>. It might also be helpful to review their docs on <a
                    href="http://rethinkdb.com/docs/start-a-server/" rel="nofollow">starting a RethinkDB server</a>.</p>
        <p>Then add the following into <code>app.js</code>:</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-k">const</span> <span
                        class="pl-c1">feathers</span> <span class="pl-k">=</span> <span
                        class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>@feathersjs/feathers<span
                            class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">express</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>@feathersjs/express<span
                            class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">socketio</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>@feathersjs/socketio<span
                            class="pl-pds">'</span></span>);

<span class="pl-k">const</span> <span class="pl-c1">rethink</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>rethinkdbdash<span class="pl-pds">'</span></span>);
<span class="pl-k">const</span> <span class="pl-c1">service</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>feathers-rethinkdb<span class="pl-pds">'</span></span>);

<span class="pl-c"><span class="pl-c">//</span> Connect to a local RethinkDB server.</span>
<span class="pl-k">const</span> <span class="pl-c1">r</span> <span class="pl-k">=</span> <span
                        class="pl-en">rethink</span>({
  db<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>feathers<span
                            class="pl-pds">'</span></span>
});

<span class="pl-c"><span class="pl-c">//</span> Create an Express compatible Feathers applicaiton instance.</span>
<span class="pl-k">const</span> <span class="pl-c1">app</span> <span class="pl-k">=</span> <span
                        class="pl-en">express</span>(<span class="pl-en">feathers</span>());

<span class="pl-c"><span class="pl-c">//</span> Turn on JSON parser for REST services</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">json</span>());
<span class="pl-c"><span class="pl-c">//</span> Turn on URL-encoded parser for REST services</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">urlencoded</span>({extended<span
                        class="pl-k">:</span> <span class="pl-c1">true</span>}));
<span class="pl-c"><span class="pl-c">//</span> Enable the REST provider for services.</span>
<span class="pl-smi">app</span>.<span class="pl-en">configure</span>(<span class="pl-smi">express</span>.<span
                        class="pl-en">rest</span>());
<span class="pl-c"><span class="pl-c">//</span> Enable the socketio provider for services.</span>
<span class="pl-smi">app</span>.<span class="pl-en">configure</span>(<span class="pl-en">socketio</span>());
<span class="pl-c"><span class="pl-c">//</span> Register the service</span>
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-s"><span
                            class="pl-pds">'</span>messages<span class="pl-pds">'</span></span>, <span class="pl-en">service</span>({
  Model<span class="pl-k">:</span> r,
  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>messages<span class="pl-pds">'</span></span>,
  paginate<span class="pl-k">:</span> {
    default<span class="pl-k">:</span> <span class="pl-c1">10</span>,
    max<span class="pl-k">:</span> <span class="pl-c1">50</span>
  }
}));
<span class="pl-smi">app</span>.<span class="pl-en">use</span>(<span class="pl-smi">express</span>.<span class="pl-en">errorHandler</span>());

<span class="pl-c"><span class="pl-c">//</span> Initialize database and messages table if it does not exists yet</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">init</span>().<span
                        class="pl-en">then</span>(() <span class="pl-k">=&gt;</span> {
  <span class="pl-c"><span class="pl-c">//</span> Create a message on the server</span>
  <span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">create</span>({
    text<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>Message created on server<span
                            class="pl-pds">'</span></span>
  }).<span class="pl-en">then</span>(<span class="pl-smi">message</span> <span class="pl-k">=&gt;</span> <span
                        class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span
                            class="pl-pds">'</span>Created message<span class="pl-pds">'</span></span>, message));

  <span class="pl-k">const</span> <span class="pl-c1">port</span> <span class="pl-k">=</span> <span
                        class="pl-c1">3030</span>;
  <span class="pl-smi">app</span>.<span class="pl-en">listen</span>(port, <span class="pl-k">function</span>() {
    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">`</span>Feathers server listening on port <span
                            class="pl-s1"><span class="pl-pse">${</span>port<span class="pl-pse">}</span></span><span
                            class="pl-pds">`</span></span>);
  });
});
                </code></pre>
        </div>
        <p>Run the example with <code>node app</code> and go to <a href="http://localhost:3030/messages" rel="nofollow">localhost:3030/messages</a>.
        </p>
        <h2><a id="user-content-querying" class="anchor" aria-hidden="true" href="#querying">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>Querying
        </h2>
        <p>In addition to the <a href="https://docs.feathersjs.com/api/databases/querying.html" rel="nofollow">common
                querying mechanism</a>, this adapter also supports:</p>
        <h3><a id="user-content-search" class="anchor" aria-hidden="true" href="#search">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>$search</code></h3>
        <p>Return all matches for a property using the <a href="https://www.rethinkdb.com/api/javascript/match/"
                                                          rel="nofollow">RethinkDB match syntax</a>.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-c"><span class="pl-c">//</span> Find all messages starting with Hello</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-c1">find</span>({
  query<span class="pl-k">:</span> {
    text<span class="pl-k">:</span> {
      $search<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>^Hello<span
                            class="pl-pds">'</span></span>
    }
  }
});

<span class="pl-c"><span class="pl-c">//</span> Find all messages ending with !</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-c1">find</span>({
  query<span class="pl-k">:</span> {
    text<span class="pl-k">:</span> {
      $search<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>!$<span class="pl-pds">'</span></span>
    }
  }
});
                </code></pre>
        </div>
        <pre><code>GET /messages?text[$search]=^Hello
GET /messages?text[$search]=!$
</code></pre>
        <h3><a id="user-content-contains" class="anchor" aria-hidden="true" href="#contains">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a><code>$contains</code></h3>
        <p>Matches if the property is an array that contains the given entry.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-c"><span class="pl-c">//</span> Find all messages tagged with `nodejs`</span>
<span class="pl-smi">app</span>.<span class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>messages<span
                            class="pl-pds">'</span></span>).<span class="pl-c1">find</span>({
  query<span class="pl-k">:</span> {
    tags<span class="pl-k">:</span> {
      $contains<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>nodejs<span
                            class="pl-pds">'</span></span>
    }
  }
});
                </code></pre>
        </div>
        <pre><code>GET /messages?tags[$contains]=nodejs
</code></pre>
        <h2><a id="user-content-customizing-the-query" class="anchor" aria-hidden="true" href="#customizing-the-query">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>Customizing the query
        </h2>
        <p>In a <code>find</code> call, <code>params.rethinkdb</code> can be passed a RethinkDB query (without
            pagination) to customize the find results.</p>
        <p>Combined with <code>.createQuery(query)</code>, which returns a new RethinkDB query with the <a
                    href="https://docs.feathersjs.com/api/databases/querying.html" rel="nofollow">common filter
                criteria</a> applied, this can be used to create more complex queries. The best way to customize the
            query is in a <a href="https://docs.feathersjs.com/api/hooks.html" rel="nofollow">before hook</a> for <code>find</code>.
            The following example adds a <code>coerceTo</code>condition from <a
                    href="https://www.rethinkdb.com/api/javascript/#coerce_to" rel="nofollow">RethinkDB coerceTo API</a>
            to match by any string inside an object.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-smi">app</span>.<span
                        class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>mesages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">hooks</span>({
  before<span class="pl-k">:</span> {
    <span class="pl-en">find</span>(<span class="pl-smi">context</span>) {
      <span class="pl-k">const</span> <span class="pl-c1">query</span> <span class="pl-k">=</span> <span class="pl-smi">context</span>.<span
                        class="pl-smi">service</span>.<span class="pl-en">createQuery</span>(<span class="pl-smi">context</span>.<span
                        class="pl-smi">params</span>.<span class="pl-smi">query</span>);

      <span class="pl-k">const</span> <span class="pl-c1">searchString</span> <span class="pl-k">=</span> <span
                        class="pl-s"><span class="pl-pds">"</span>my search string<span class="pl-pds">"</span></span>;

      <span class="pl-smi">hook</span>.<span class="pl-smi">params</span>.<span class="pl-smi">rethinkdb</span> <span
                        class="pl-k">=</span> <span class="pl-smi">query</span>.<span class="pl-en">filter</span>(<span
                        class="pl-k">function</span>(<span class="pl-smi">doc</span>) {
        <span class="pl-k">return</span> <span class="pl-smi">doc</span>.<span class="pl-en">coerceTo</span>(<span
                        class="pl-s"><span class="pl-pds">'</span>string<span class="pl-pds">'</span></span>).<span
                        class="pl-c1">match</span>(<span class="pl-s"><span class="pl-pds">'</span>(?i)<span
                            class="pl-pds">'</span></span> <span class="pl-k">+</span> searchString);
      })
    }
  }
});
                </code></pre>
        </div>
        <p>If you need even more control then you can use <code>service.table</code> (<code>context.service.table</code>
            in a hook) directly. This way you can create a query from scratch without the the <a
                    href="https://docs.feathersjs.com/api/databases/querying.html" rel="nofollow">common filter
                criteria</a> applied. The following example adds a <code>getNearest</code> condition for <a
                    href="https://www.rethinkdb.com/docs/geo-support/javascript/" rel="nofollow">RethinkDB geospatial
                queries</a>.</p>
        <div class="highlight highlight-source-js"><pre><code class="hljs"><span class="pl-smi">app</span>.<span
                        class="pl-en">service</span>(<span class="pl-s"><span class="pl-pds">'</span>mesages<span
                            class="pl-pds">'</span></span>).<span class="pl-en">hooks</span>({
  before<span class="pl-k">:</span> {
    <span class="pl-en">find</span>(<span class="pl-smi">context</span>) {
      <span class="pl-k">const</span> <span class="pl-c1">r</span> <span class="pl-k">=</span> <span
                        class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">r</span>;

      <span class="pl-k">const</span> <span class="pl-c1">point</span> <span class="pl-k">=</span> <span class="pl-smi">r</span>.<span
                        class="pl-en">point</span>(<span class="pl-k">-</span><span
                        class="pl-c1">122.422876</span>, <span class="pl-c1">37.777128</span>);  <span
                        class="pl-c"><span class="pl-c">//</span> San Francisco</span>

      <span class="pl-c"><span class="pl-c">//</span> Replace the query with a custom query</span>
      <span class="pl-smi">context</span>.<span class="pl-smi">params</span>.<span class="pl-smi">rethinkdb</span> <span
                        class="pl-k">=</span> <span class="pl-smi">context</span>.<span
                        class="pl-smi">service</span>.<span class="pl-smi">table</span>.<span
                        class="pl-en">getNearest</span>(point, { index<span class="pl-k">:</span> <span
                        class="pl-s"><span class="pl-pds">'</span>location<span class="pl-pds">'</span></span> });
    }
  }
});
                </code></pre>
        </div>
        <h2><a id="user-content-changefeeds" class="anchor" aria-hidden="true" href="#changefeeds">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>Changefeeds
        </h2>
        <p><code>.createQuery(query)</code> can also be used to listen to changefeeds and then send <a
                    href="https://docs.feathersjs.com/api/events.html" rel="nofollow">custom events</a>.</p>
        <p>Since the service already sends real-time events for all changes the recommended way to listen to changes is
            with <a href="https://github.com/feathersjs/feathers-reactive">feathers-reactive</a> however.</p>
        <h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license">
                <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16"
                     aria-hidden="true">
                    <path fill-rule="evenodd"
                          d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
            </a>License
        </h2>
        <p>Copyright (c) 2017</p>
        <p>Licensed under the <a href="https://github.com/feathersjs-ecosystem/feathers-rethinkdb/blob/master/LICENSE">MIT license</a>.
        </p>
    </article>
{% endblock %}
